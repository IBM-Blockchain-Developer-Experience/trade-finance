/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/java_library_plugin.html
 */

plugins {
    id 'maven-publish'
    // Apply the java-library plugin to add support for Java Library
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
}

version = '0.0.1'
group = 'org.tradefinance'
sourceCompatibility=1.8

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    mavenLocal();
    jcenter()

    maven {
        url "https://nexus.hyperledger.org/content/repositories/snapshots/"
    }
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.1-jre'

    implementation project(':ledger-api')
    implementation project(':assets')

    implementation 'org.hyperledger.fabric:fabric-gateway-java:1.4.0'

    compile group: 'org.json', name: 'json', version: '20180813'

    compile 'com.github.skebir:prettytable:v1.0'

    compile group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.0.9'
    compile group: 'io.swagger.core.v3', name: 'swagger-jaxrs2', version: '2.0.9'
    compile group: 'io.swagger.core.v3', name: 'swagger-models', version: '2.0.9'

    compile group: 'javax.ws.rs', name: 'javax.ws.rs', version: '1.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

shadowJar {
    baseName = 'FabricProxyHarness'
    version = null
    classifier = null

    manifest {
        attributes 'Main-Class': 'test.ProxyTestHarness'
    }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-parameters"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
        }
    }
}
